{"version":3,"sources":["components/Chart.tsx","components/WithDataChart.tsx","components/Sport.tsx","components/Sports.tsx","components/SportTrend.tsx","services/sports-service.ts","App.js","index.js"],"names":["Chart","data","sport","tickValues","filter","x","match","map","id","width","height","xType","WithDataChart","props","state","loaded","fetch","configData","TREND_API_URL","this","credentials","then","res","json","myData","trends","monthlyTrend","formattedTime","y","value","setState","catch","console","log","length","className","React","Component","Sport","useState","expanded","setExpanded","onClick","iconRight","size","variant","Sports","items","item","attributes","name","SportList","filterItems","text","handleChange","bind","a","SPORT_LIST_URL","sortData","sort","b","search","normalize","replace","toUpperCase","e","cleanSearch","includes","target","labelText","onChange","identifier","helperText","App","SportTrend","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44c5cbce.chunk.js","sourcesContent":["import {\n  XYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  LineSeries,\n} from \"react-vis\";\n\nimport { ChartData } from \"./interfaces\";\n\ntype Props = {\n  data: ChartData[];\n  sport: string;\n};\n\nconst Chart = ({ data, sport }: Props) => {\n  // get only january labels\n  const tickValues = data.filter(({ x }) => x.match(/Jan/g)).map(({ x }) => x);\n  return (\n    <div id={`panel-${sport}`}>\n      <XYPlot width={1000} height={300} xType=\"ordinal\">\n        <HorizontalGridLines />\n        <LineSeries data={data} />\n        <XAxis tickValues={tickValues} />\n        <YAxis />\n      </XYPlot>\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport { VtmnLoader } from \"@vtmn/react\";\n\nimport configData from \"../config.json\";\nimport Chart from \"./Chart\";\nimport { ChartData } from \"./interfaces\";\n\ntype Props = {\n  sport: string;\n};\n\ntype State = {\n  data: ChartData[];\n  loaded: boolean;\n};\n\ninterface MonthlyTrend {\n  formattedTime: string;\n  value: number;\n}\n\nclass WithDataChart extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { data: [], loaded: false };\n  }\n\n  componentDidMount() {\n    fetch(`${configData.TREND_API_URL}${this.props.sport}`, {\n      credentials: \"same-origin\",\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        const myData = data.trends.map((monthlyTrend: MonthlyTrend) => ({\n          x: monthlyTrend.formattedTime,\n          y: monthlyTrend.value,\n        }));\n        this.setState({ data: myData, loaded: true });\n      })\n      .catch(console.log);\n  }\n  render() {\n    return this.state.loaded ? (\n      this.state.data.length > 0 ? (\n        <Chart data={this.state.data} sport={this.props.sport} />\n      ) : (\n        <div className=\"vtmn-alert vtmn-alert_variant--warning\">\n          <div className=\"vtmn-alert_content\">\n            <span className=\"vtmn-alert_content-description\">\n              Aucunes donn√©es\n            </span>\n          </div>\n        </div>\n      )\n    ) : (\n      <VtmnLoader />\n    );\n  }\n}\n\nexport default WithDataChart;\n","import { useState } from \"react\";\n\nimport { VtmnButton } from \"@vtmn/react\";\n\nimport WithDataChart from \"./WithDataChart\";\n\ninterface SportDisplay {\n  sport: string;\n}\n\nconst Sport = ({ sport }: SportDisplay) => {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <div className=\"vtmn-card my-card\">\n      <div className=\"card-title\">\n        <h4 onClick={() => setExpanded(!expanded)} className=\"question-title\">\n          {sport}\n        </h4>\n        <div>\n          <VtmnButton\n            onClick={() => setExpanded(!expanded)}\n            iconRight={expanded ? \"arrow-up-line\" : \"arrow-down-line\"}\n            size=\"small\"\n            variant=\"tertiary\"\n            aria-label={expanded ? \"Masquer les trends\" : \"Afficher les trends\"}\n            aria-expanded={expanded}\n            aria-controls={`panel-${sport}`}\n          >\n            {expanded ? <span>Masquer</span> : <span>Afficher</span>}\n          </VtmnButton>\n        </div>\n      </div>\n      {expanded && <WithDataChart sport={sport} />}\n    </div>\n  );\n};\n\nexport default Sport;\n","import React from \"react\";\n\nimport Sport from \"./Sport\";\nimport { Item } from \"./interfaces\";\n\ntype Props = {\n  items: Item[];\n};\n\nclass Sports extends React.Component<Props> {\n  render() {\n    return (\n      <ul>\n        {this.props.items.map((item: Item) => (\n          <Sport key={item.id} sport={item.attributes.name} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Sports;\n","import React from \"react\";\n\nimport { VtmnTextInput } from \"@vtmn/react\";\n\nimport { getSports } from \"../services/sports-service\";\n\nimport Sports from \"./Sports\";\nimport { Item } from \"./interfaces\";\n\ninterface Props {}\ninterface State {\n  items: Item[];\n  filterItems: Item[];\n  text: string;\n}\n\nclass SportList extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { items: [], filterItems: [], text: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async componentDidMount() {\n    const { data } = await getSports();\n    this.setState({ items: data, filterItems: this.sortData(data) });\n  }\n\n  sortData(data: Item[]) {\n    return data.sort((a: Item, b: Item) =>\n      a.attributes?.name > b.attributes?.name\n        ? 1\n        : b.attributes?.name > a.attributes?.name\n        ? -1\n        : 0\n    );\n  }\n\n  cleanSearch(search: string) {\n    return search\n      .normalize(\"NFD\")\n      .replace(/[\\u0300-\\u036f]/g, \"\")\n      .toUpperCase();\n  }\n\n  handleChange(e: any) {\n    let itemsCopy = [...this.state.items];\n    const filterItems = itemsCopy.filter((sport) =>\n      this.cleanSearch(sport.attributes?.name ?? \"\").includes(\n        this.cleanSearch(e.target.value)\n      )\n    );\n\n    this.setState({\n      text: e.target.value,\n      filterItems: this.sortData(filterItems),\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"vtmn-flex vtmn-bg-brand-digital-light-3 vtmn-rounded-lg vtmn-p-6 vtmn-mb-5\">\n          <p className=\"vtmn-text-xl vtmn-text-center vtmn-font-semibold vtmn-text-black\">\n            Sport\n            <span className=\"vtmn-text-brand-digital vtmn-text-2xl\">\n              Trend <span className=\"vtmx-temp-hot-line inline-icon\"></span>\n            </span>\n          </p>\n        </div>\n        <div className=\"vtmn-flex vtmn-justify-around\">\n          <div>\n            <VtmnTextInput\n              labelText=\"Filtrer\"\n              onChange={this.handleChange}\n              identifier=\"filter\"\n              helperText=\"Filtrer les sports\"\n            />\n          </div>\n        </div>\n        <div className=\"vtmn-flex vtmn-justify-around\">\n          <Sports items={this.state.filterItems} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SportList;\n","import configData from \"../config.json\";\n\nconst getSports = () =>\n  fetch(configData.SPORT_LIST_URL).then((res) => {\n    return res.json();\n  });\n\nexport { getSports };\n","import \"@vtmn/css/dist/index.css\";\nimport \"@vtmn/icons/dist/vitamix/font/vitamix.css\";\nimport \"@vtmn/css-text-input/dist/index.css\";\n\nimport \"typeface-roboto\";\nimport \"typeface-roboto-condensed\";\n\nimport \"./App.css\";\nimport SportTrend from \"./components/SportTrend\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SportTrend />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}